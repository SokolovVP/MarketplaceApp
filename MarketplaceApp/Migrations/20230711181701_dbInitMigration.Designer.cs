// <auto-generated />
using System;
using MarketplaceApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MarketplaceApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230711181701_dbInitMigration")]
    partial class dbInitMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MarketplaceApp.Models.Comment", b =>
                {
                    b.Property<int?>("commentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("commentId"));

                    b.Property<int>("solutionId")
                        .HasColumnType("int");

                    b.Property<string>("text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("userId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("commentId");

                    b.HasIndex("solutionId");

                    b.HasIndex("userId");

                    b.ToTable("comment");
                });

            modelBuilder.Entity("MarketplaceApp.Models.Quest", b =>
                {
                    b.Property<int>("questId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("questId"));

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("endDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isAvailable")
                        .HasColumnType("bit");

                    b.Property<bool>("isSolved")
                        .HasColumnType("bit");

                    b.Property<DateTime>("publishingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("questId");

                    b.HasIndex("userId");

                    b.ToTable("quest");
                });

            modelBuilder.Entity("MarketplaceApp.Models.Solution", b =>
                {
                    b.Property<int>("solutionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("solutionId"));

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isSelected")
                        .HasColumnType("bit");

                    b.Property<int>("questId")
                        .HasColumnType("int");

                    b.Property<int?>("rating")
                        .HasColumnType("int");

                    b.Property<string>("sourceLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("solutionId");

                    b.HasIndex("questId");

                    b.HasIndex("userId");

                    b.ToTable("solution");
                });

            modelBuilder.Entity("MarketplaceApp.Models.User", b =>
                {
                    b.Property<int>("userId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("userId"));

                    b.Property<string>("category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("registrationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("userId");

                    b.ToTable("user");
                });

            modelBuilder.Entity("MarketplaceApp.Models.Comment", b =>
                {
                    b.HasOne("MarketplaceApp.Models.Solution", "solution")
                        .WithMany("comments")
                        .HasForeignKey("solutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MarketplaceApp.Models.User", "user")
                        .WithMany("comments")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("solution");

                    b.Navigation("user");
                });

            modelBuilder.Entity("MarketplaceApp.Models.Quest", b =>
                {
                    b.HasOne("MarketplaceApp.Models.User", "user")
                        .WithMany("quests")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("MarketplaceApp.Models.Solution", b =>
                {
                    b.HasOne("MarketplaceApp.Models.Quest", "quest")
                        .WithMany("solutions")
                        .HasForeignKey("questId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MarketplaceApp.Models.User", "user")
                        .WithMany("solutions")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("quest");

                    b.Navigation("user");
                });

            modelBuilder.Entity("MarketplaceApp.Models.Quest", b =>
                {
                    b.Navigation("solutions");
                });

            modelBuilder.Entity("MarketplaceApp.Models.Solution", b =>
                {
                    b.Navigation("comments");
                });

            modelBuilder.Entity("MarketplaceApp.Models.User", b =>
                {
                    b.Navigation("comments");

                    b.Navigation("quests");

                    b.Navigation("solutions");
                });
#pragma warning restore 612, 618
        }
    }
}
